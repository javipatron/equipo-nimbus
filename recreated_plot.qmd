---
title: "Recreated Plot"
format: html
editor: visual
---

```{r}
# Load in packages
library(tidyverse)
library(ggplot2)
library(here)
library(janitor)
library(lubridate)
```

```{r}
# Read in the four files needed to recreate the plot, cleaning the names for each one
Q1 <- read_csv(here("/courses", "EDS214", "equipo-nimbus", "data", "raw-data", "QuebradaCuenca1-Bisley.csv")) %>%
  clean_names()

Q2 <- read_csv(here("/courses", "EDS214", "equipo-nimbus", "data", "raw-data", "QuebradaCuenca2-Bisley.csv")) %>%
  clean_names()

Q3 <- read_csv(here("/courses", "EDS214", "equipo-nimbus", "data", "raw-data", "QuebradaCuenca3-Bisley.csv")) %>%
  clean_names()

PRM <- read_csv(here("/courses", "EDS214", "equipo-nimbus", "data", "raw-data", "RioMameyesPuenteRoto.csv")) %>%
  clean_names()
```

```{r}
# Combine datasets by full join (they share all of the same columns, so columns not specified)
joined_df <- Q1 %>%
  full_join(Q2) %>%
  full_join(Q3) %>%
  full_join(PRM)
```

```{r}
# Tidy the data and begin to make it ready for our analysis
pivot_df_no3_k <- joined_df %>%
  select(sample_id, sample_date, no3_n, k) %>% # Select only necessary columns
  filter(lubridate::year(sample_date) %in% 1989:1995) %>% # Only have data from 1989-1995
  mutate(month_date = lubridate::floor_date(sample_date, "month")) %>% # Make data from the day level to the month level
  pivot_longer(cols = c(no3_n, k), names_to = "chemicals", values_to = "amounts") # Make the two chemical names in a column and values in another

k_correct_dates <- pivot_df_no3_k %>%
  filter(chemicals == "k") %>% # Select only k
  mutate(amounts = replace(amounts, lubridate::year(sample_date) >= 1993, as.numeric("NA"))) # Make anything after 1993 NAs so no values plot, to roughly match the plot we are recreating
  
pivot_df_no3_no_k <- pivot_df_no3_k %>%
  filter(chemicals == "no3_n") # Select only no3

pivot_df_no3_k_rejoined <- full_join(pivot_df_no3_no_k, k_correct_dates) # Combine refined k data with the no3 data
```

```{r}
# Add a column with the level of the data as bimonthly rather than monthly

pivot_df_no3_k_rejoined <- pivot_df_no3_k_rejoined %>%
  mutate(odd_month_date = month_date, .after = month_date) # Create a copy of the month column which will be filled with bimonthly dates

# Converting to merge even months into odd months
pivot_df_no3_k_rejoined$odd_month_date <- str_replace_all(pivot_df_no3_k_rejoined$odd_month_date, "02-01", "01-01")
pivot_df_no3_k_rejoined$odd_month_date <- str_replace_all(pivot_df_no3_k_rejoined$odd_month_date, "04-01", "03-01")
pivot_df_no3_k_rejoined$odd_month_date <- str_replace_all(pivot_df_no3_k_rejoined$odd_month_date, "06-01", "05-01")
pivot_df_no3_k_rejoined$odd_month_date <- str_replace_all(pivot_df_no3_k_rejoined$odd_month_date, "08-01", "07-01")
pivot_df_no3_k_rejoined$odd_month_date <- str_replace_all(pivot_df_no3_k_rejoined$odd_month_date, "10-01", "09-01")
pivot_df_no3_k_rejoined$odd_month_date <- str_replace_all(pivot_df_no3_k_rejoined$odd_month_date, "12-01", "11-01")

pivot_df_no3_k_rejoined$odd_month_date <- as.Date(pivot_df_no3_k_rejoined$odd_month_date) # Make it a Date variable again
```

```{r}
# Summarize means by month, chemical, and site
summary_df <- pivot_df_no3_k_rejoined %>%
  group_by(sample_id, odd_month_date, chemicals) %>%
  summarize(means_by_month = mean(amounts, na.rm = TRUE))
```

```{r}
# Define positions of vline for Hugo
date_vline <- as.Date(c("1989-09-01"))    
date_vline_position <- which(summary_df$odd_month_date %in% date_vline)

# Plot the two chemicals of interest with colors by site
ggplot(data = summary_df, aes(x = odd_month_date, 
                              y = means_by_month)) +
  geom_line(aes(color = sample_id)) +
  facet_wrap(~chemicals,
             scales = "free_y",
             ncol = 1,
             strip.position = "left", 
             labeller = as_labeller(c(k = "K mg l^-1", 
                                      no3_n = "NO3-N ug l^-1"))) +
  scale_color_manual(values = c("darkseagreen3", "bisque3", "darkgreen", "deepskyblue3")) +
  labs(x = "Years", y = "Bimonthly Chemical Means", color = "") +
  theme_light() +
  # Add the line
  geom_vline(xintercept = as.numeric(summary_df$odd_month_date[date_vline_position]), 
             color = "dark grey",
             linetype = "dashed") + 
  theme(panel.grid.minor.x=element_blank(),
        panel.grid.major.x=element_blank(), #get rid of vertical grid lines 
        text=element_text(size=10,  family="Times New Roman"))
```
